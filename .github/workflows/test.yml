name: Test
on: push
jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/cache@v4
        with:
          path: node_modules
          key: v1/${{ runner.os }}/node-20/${{ hashFiles('yarn.lock') }}
          restore-keys: v1/${{ runner.os }}/node-20/
      - run: npm install

  lint:
    name: Lint
    needs: [install]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/cache@v4
        with:
          path: node_modules
          key: v1/${{ runner.os }}/node-20/${{ hashFiles('yarn.lock') }}
          restore-keys: v1/${{ runner.os }}/node-20/
      - run: npm install
      - run: npm run lint

  build:
    name: Build
    needs: [install]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/cache@v4
        with:
          path: node_modules
          key: v1/${{ runner.os }}/node-20/${{ hashFiles('yarn.lock') }}
          restore-keys: v1/${{ runner.os }}/node-20/
      - run: npm install
      - run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            bundle/**
            types/**
          if-no-files-found: error

  types:
    name: Types
    needs: [install, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/cache@v4
        with:
          path: node_modules
          key: v1/${{ runner.os }}/node-20/${{ hashFiles('yarn.lock') }}
          restore-keys: v1/${{ runner.os }}/node-20/
      - run: npm install
      - uses: actions/download-artifact@v4
        with:
          name: build-output
          path: .
      - run: npm run test:types

  test:
    name: Test
    needs: [install]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/cache@v4
        with:
          path: node_modules
          key: v1/${{ runner.os }}/node-20/${{ hashFiles('yarn.lock') }}
          restore-keys: v1/${{ runner.os }}/node-20/
      - run: npm install
      - run: npm run test:coverage
        env:
          NYC_REPORTER: lcov
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
