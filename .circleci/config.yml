references:
  defaults: &defaults
    working_directory: ~/interactor.js
    docker:
      - image: circleci/node:10-browsers

  cache_key: &cache_key
    v1-{{ .Branch }}-{{ checksum "yarn.lock" }}

  attach_workspace: &attach_workspace
    attach_workspace:
      at: ~/

version: 2.0
jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          name: Restore cache
          key: *cache_key
      - run:
          name: Install dependencies
          command: yarn
      - save_cache:
          name: Save cache
          key: *cache_key
          paths:
            - node_modules
      - persist_to_workspace:
          root: ~/
          paths:
            - interactor.js
            - .ssh

  lint:
    <<: *defaults
    steps:
      - *attach_workspace
      - run:
          name: Lint package
          command: yarn lint

  build:
    <<: *defaults
    steps:
      - *attach_workspace
      - run:
          name: Build package
          command: yarn build
      - persist_to_workspace:
          root: ~/
          paths:
            - interactor.js/dist

  test:
    <<: *defaults
    steps:
      - *attach_workspace
      - run:
          name: Run tests
          command: yarn test:coverage --junit
      - store_test_results:
          path: ./junit
      - store_artifacts:
          path: ./junit

  test-jsdom:
    <<: *defaults
    steps:
      - *attach_workspace
      - run:
          name: Run jsdom tests
          command: yarn test:jsdom:coverage --junit
      - store_test_results:
          path: ./junit
      - store_artifacts:
          path: ./junit

  deploy:
    <<: *defaults
    steps:
      - *attach_workspace
      - run:
          name: Publish
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            .circleci/release
      - run:
          name: Push Tags
          command: git push --tags

workflows:
  version: 2
  default:
    jobs:
      - install
      - lint:
          requires:
            - install
      - build:
          requires:
            - install
      - test:
          requires:
            - install
      - test-jsdom:
          requires:
            - install
      - deploy:
          requires:
            - lint
            - build
            - test
            - test-jsdom
          filters:
            branches:
              only: master
